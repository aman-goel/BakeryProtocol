### Proof certificate: #31
invariant [ic3po_prop7]	(forall P . (pc_p5(P) -> (~pc_p1(P) & ~pc_p2(P) & ~pc_p3(P) & ~pc_p4(P) & ~pc_p6(P) & ~pc_cs(P) & ~pc_p7(P))))
invariant [ic3po_prop6]	(forall P . (pc_p4(P) -> (~pc_p1(P) & ~pc_p2(P) & ~pc_p3(P) & ~pc_p5(P) & ~pc_p6(P) & ~pc_cs(P) & ~pc_p7(P))))
invariant [ic3po_prop4]	(forall P . (pc_p2(P) -> (~pc_p1(P) & ~pc_p3(P) & ~pc_p4(P) & ~pc_p5(P) & ~pc_p6(P) & ~pc_cs(P) & ~pc_p7(P))))
invariant [ic3po_prop9]	(forall P . (pc_p7(P) -> (~pc_p1(P) & ~pc_p2(P) & ~pc_p3(P) & ~pc_p4(P) & ~pc_p5(P) & ~pc_p6(P) & ~pc_cs(P))))
invariant [ic3po_prop8]	(forall P . (pc_p6(P) -> (~pc_p1(P) & ~pc_p2(P) & ~pc_p3(P) & ~pc_p4(P) & ~pc_p5(P) & ~pc_cs(P) & ~pc_p7(P))))
invariant [ic3po_prop10]	(forall P . (pc_p1(P) | pc_p2(P) | pc_p3(P) | pc_p4(P) | pc_p5(P) | pc_p6(P) | pc_cs(P) | pc_p7(P)))
invariant [ic3po_prop2]	(forall P . (pc_cs(P) -> (~pc_p1(P) & ~pc_p2(P) & ~pc_p3(P) & ~pc_p4(P) & ~pc_p5(P) & ~pc_p6(P) & ~pc_p7(P))))
invariant [ic3po_prop3]	(forall P . (pc_p1(P) -> (~pc_p2(P) & ~pc_p3(P) & ~pc_p4(P) & ~pc_p5(P) & ~pc_p6(P) & ~pc_cs(P) & ~pc_p7(P))))
invariant [ic3po_prop5]	(forall P . (pc_p3(P) -> (~pc_p1(P) & ~pc_p2(P) & ~pc_p4(P) & ~pc_p5(P) & ~pc_p6(P) & ~pc_cs(P) & ~pc_p7(P))))
invariant [ic3po_prop1]	(forall Pi, Pj . (~(Pi = Pj) -> (pc_cs(Pi) -> ~pc_cs(Pj))))
invariant [ic3po_other9]	(forall P2, P1 . ((pc_p5(P1) & pc_p3(P2)) -> (unread(P1, P2) | le_number(num(P1), max(P2)))))
invariant [ic3po_global1_17]	(forall P1 . (pc_p2(P1) -> flag(P1)))
invariant [ic3po_other13]	(forall P2, P1 . ((pc_p5(P1) & pc_p2(P2)) -> (unread(P2, P1) | unread(P1, P2) | le_number(num(P1), max(P2)))))
invariant [ic3po_other2]	(forall P1 . (pc_p4(P1) -> flag(P1)))
invariant [ic3po_other12]	(forall P2, P1 . (((max(P1) = zero_number) & pc_p4(P1) & pc_p6(P2)) -> unread(P2, P1)))
invariant [ic3po_other5]	(forall P1 . ((num(P1) = zero_number) -> ~pc_p6(P1)))
invariant [ic3po_other17]	(forall P2, P1 . ((pc_p6(P1) & ll(P2, P1)) -> (unread(P1, P2) | (P2 = P1) | le_number(num(P2), zero_number))))
invariant [ic3po_other15]	(forall P2, P1 . ((pc_p6(P1) & pc_p3(P2) & nxt(P1, P2)) -> le_number(num(P1), max(P2))))
invariant [ic3po_other11]	(forall P2, P1 . ((pc_p5(P2) & (max(P1) = zero_number) & pc_p4(P1)) -> unread(P2, P1)))
invariant [ic3po_other16]	(forall P2, P1 . ((pc_p5(P1) & ll(P2, P1)) -> (unread(P1, P2) | (P2 = P1) | le_number(num(P2), zero_number))))
invariant [ic3po_other1]	(forall P1 . (pc_p3(P1) -> flag(P1)))
invariant [ic3po_other8]	(forall P2, P1 . ((pc_cs(P1) & pc_p2(P2)) -> (unread(P2, P1) | le_number(num(P1), max(P2)))))
invariant [ic3po_other19]	(forall P2, P1 . ((pc_p6(P1) & pc_p2(P2) & nxt(P1, P2)) -> (unread(P2, P1) | le_number(num(P1), max(P2)))))
invariant [ic3po_other6]	(forall P2, P1 . (pc_cs(P1) -> (ll(P1, P2) | le_number(num(P2), zero_number))))
invariant [ic3po_other3]	(forall P1 . ((num(P1) = zero_number) -> ~pc_cs(P1)))
invariant [ic3po_other10]	(forall P2, P1 . ((pc_p6(P1) & pc_p3(P2)) -> (unread(P1, P2) | le_number(num(P1), max(P2)))))
invariant [ic3po_other7]	(forall P2, P1 . ((pc_cs(P1) & pc_p3(P2)) -> le_number(num(P1), max(P2))))
invariant [ic3po_other4]	(forall P1 . ((num(P1) = zero_number) -> ~pc_p5(P1)))
invariant [ic3po_other18]	(forall P2, P1 . (nxt(P2, P1) -> ((max(P1) = zero_number) -> (pc_p4(P1) -> ~pc_p6(P2)))))
invariant [ic3po_global1_18]	(forall P1 . ((num(P1) = zero_number) -> ~pc_p4(P1)))
invariant [ic3po_other14]	(forall P2, P1 . ((pc_p6(P1) & pc_p2(P2)) -> (unread(P1, P2) | le_number(num(P1), max(P2)) | unread(P2, P1))))
###
